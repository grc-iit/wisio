name: Build and Test

on:
  pull_request:
    branches: [main]
  push:

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04"]
        python: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    name: ${{ matrix.os }}-${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      OMPI_ALLOW_RUN_AS_ROOT: 1
      OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'push'
        with:
          submodules: recursive
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            ca-certificates \
            lsb-release \
            wget
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt install -y ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt update
          sudo apt install -y \
            build-essential \
            cmake \
            git \
            libarrow-dev \
            libhdf5-dev \
            libncurses-dev \
            libopenmpi-dev \
            libparquet-dev \
            libreadline-dev \
            meson \
            ninja-build \
            nlohmann-json3-dev \
            openmpi-bin \
            openmpi-common
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade meson-python setuptools wheel
          pip install -r tests/requirements.txt
      - name: Install WisIO
        run: |
          pip install .[darshan,dftracer] \
            -Csetup-args="--prefix=$HOME/.local" \
            -Csetup-args="-Denable_tests=true"
      - name: Run Python tests
        run: |
          pytest --verbose
      - name: Run C++ tests
        run: |
          meson build --prefix=$HOME/.local -Denable_tests=true
          meson compile -C build --verbose
          meson test -C build --verbose
          meson test -C build --verbose --setup=mpi
      - name: Run WisIO
        run: |
          wisio analysis=recorder analysis.trace_path=tests/data/extracted/recorder-parquet
